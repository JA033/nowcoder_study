server.port=8080
server.servlet.context-path=/community

# ThymeleafProperties
spring.thymeleaf.cache=false

# DataSourceProperties
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.datasource.url=jdbc:mysql://localhost:3306/community?characterEncoding=utf-8&useSSL=false&serverTimezone=Hongkong&allowPublicKeyRetrieval=true
spring.datasource.username=dxy
spring.datasource.password=dxy
spring.datasource.type=com.zaxxer.hikari.HikariDataSource
spring.datasource.hikari.maximum-pool-size=15
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=30000

# MybatisProperties
mybatis.mapper-locations=classpath:mapper/*.xml
mybatis.type-aliases-package=com.nowcoder.community.entity
mybatis.configuration.useGeneratedKeys=true
mybatis.configuration.mapUnderscoreToCamelCase=true

# MailProperties
spring.mail.host=smtp.qq.com
spring.mail.port=465
spring.mail.username=995012465@qq.com
spring.mail.password=cbwquxwhlgxxbfbd
spring.mail.protocol=smtps
spring.mail.properties.mail.smtp.ssl.enable=true

# community
community.path.domain=http://192.168.159.129:8080
community.path.upload=/home/dxy/Documents/nowcoderData/userHeader

# RedisProperties
spring.data.redis.database=11
spring.data.redis.host=localhost
spring.data.redis.port=6379

# KafkaProperties
# you need to start zookeeper and kafka in terminal before start spring project with the following two commands:
# ./zookeeper-server-start.sh ../config/zookeeper.properties
# ./kafka-server-start.sh ../config/server.properties
# and you can create a topic use the following command:
# ./kafka-topics.sh --create --bootstrap-server localhost:9092 --replication-factor 1 --partitions 1 --topic test
spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=community-consumer-group
spring.kafka.consumer.enable-auto-commit=true
spring.kafka.consumer.auto-commit-interval=3000

# ElasticsearchProperties
# use ./elasticsearch command at $ES_Home/bin/ in terminal to start ES
# use curl --cacert /home/dxy/Programs/elasticsearch-8.11.1/config/certs/http_ca.crt -u elastic:TGli0Mcpl7q+46vwagAz https://localhost:9200
# command to check the running status of ES. the "elastic" and "TGli0Mcpl7q+46vwagAz" in this command are the default username and password
# of ES which will generate automatically when you first start ES
# the default port of ES is 9200 and for kibana is 5601
# use ./elasticsearch-create-enrollment-token -s kibana --url "https://localhost:9200" can regenerate the token to connect kibana
# HTTP CA certificate SHA-256 fingerprint:
#  2129455a49bbd8873c6c321680754eb5294157f302e7cc96b7aa9421ebc23eb8
# you should create a ElasticsearchConfig.java to config ES
spring.elasticsearch.uris=https://127.0.0.1:9200


